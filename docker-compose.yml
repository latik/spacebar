version: '3.5'
services:
    app:
        build: ./docker/php/
        working_dir: /var/www
        environment:
            TIMEZONE: Europe/Kiev
            DATABASE_URL: pgsql://postgres:spacebar@database:5432/spacebar
            MESSENGER_TRANSPORT_DSN: amqp://guest:guest@queue:5672/%2f/messages
        volumes:
            - .:/var/www:cached
        depends_on:
            - database
        networks:
            - webnet

    composer:
        image: composer:latest
        volumes:
            - .:/var/www
        working_dir: /var/www
        depends_on:
            - app
        command: install

    web:
        image: nginx:alpine
        volumes:
            - ./docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
            - ./public:/var/www/public:ro
        depends_on:
            - app
        ports:
            - 8090:80
        networks:
            - webnet

    database:
        image: postgres:alpine
        #volumes:
        #    - ./database:/docker-entrypoint-initdb.d
        environment:
            POSTGRES_PASSWORD: spacebar
        networks:
            - webnet

    elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:${ELASTICSEARCH_TAG}
        environment:
            - http.host=0.0.0.0
            - transport.host=0.0.0.0
            - discovery.type=single-node
            - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
            - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
        ulimits:
            memlock:
                soft: -1
                hard: -1
        #volumes:
            #- esdata:/usr/share/elasticsearch/data
            #- docker/elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
        ports:
            - 9200:9200
            #- 9300:9300
        networks:
            - webnet

    kibana:
        image: docker.elastic.co/kibana/kibana:${ELASTICSEARCH_TAG}
        environment:
            - SERVER_NAME=kibana.test
        ports:
            - 5601:5601
        networks:
            - webnet

    logstash:
        image: docker.elastic.co/logstash/logstash:${ELASTICSEARCH_TAG}
        networks:
            - webnet

    queue:
        build: ./docker/rabbitmq/
        ports:
            - 5672:5672
            - 15672:15672
        networks:
            - webnet

    adminer:
        image: adminer:4.6.2
        ports:
            - 8089:8080
        networks:
            - webnet

volumes:
    esdata:

networks:
    webnet: